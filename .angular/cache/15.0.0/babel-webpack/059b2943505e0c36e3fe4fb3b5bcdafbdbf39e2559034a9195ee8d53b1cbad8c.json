{"ast":null,"code":"import { tap } from 'rxjs';\nimport { HttpEvent, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ToDoService\";\nexport class InterseptorService {\n  toDoService;\n  constructor(toDoService) {\n    this.toDoService = toDoService;\n  }\n  intercept(req, next) {\n    let token = this.toDoService.token;\n    const authRequest = req.clone({\n      headers: req.headers.set('Authorization', 'Bearer ' + token)\n    });\n    return next.handle(authRequest).pipe(tap(event => {\n      if (event instanceof HttpResponse) console.log('Server response');\n    }, err => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status == 401) console.log('Unauthorized');\n      }\n    }));\n  }\n  static ɵfac = function InterseptorService_Factory(t) {\n    return new (t || InterseptorService)(i0.ɵɵinject(i1.ToDoService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterseptorService,\n    factory: InterseptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}