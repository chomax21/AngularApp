{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./ToDoService\";\nexport class InterseptorService {\n  toDoService;\n  constructor(toDoService) {\n    this.toDoService = toDoService;\n  }\n  intercept(req, next) {\n    let jwt;\n    let jwtMethod;\n    let jwtStorage;\n    this.toDoService.token$.subscribe(token => {\n      jwt = token;\n    });\n    jwtMethod = this.toDoService.getToken();\n    jwtStorage = localStorage.getItem(\"jwt\");\n    if (jwt) console.log(jwt + \"INTERSEPTOR\");else if (jwtStorage) {\n      console.log(jwtStorage + \"STORAGE\");\n    } else console.log(\"LOST SOMEWHERE\");\n    const authRequest = req.clone({\n      headers: req.headers.set(\"Authorization\", \"Bearer \" + jwtStorage)\n    });\n    return next.handle(authRequest); /* .pipe(\r\n                                     tap(\r\n                                     (event) => {\r\n                                     if (event instanceof HttpResponse)\r\n                                     console.log('Server response')\r\n                                     },\r\n                                     (err) => {\r\n                                     if (err instanceof HttpErrorResponse) {\r\n                                     if (err.status == 401)\r\n                                     console.log('Unauthorized')\r\n                                     }\r\n                                     }\r\n                                     )); */\n  }\n\n  static ɵfac = function InterseptorService_Factory(t) {\n    return new (t || InterseptorService)(i0.ɵɵinject(i1.ToDoService));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterseptorService,\n    factory: InterseptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}