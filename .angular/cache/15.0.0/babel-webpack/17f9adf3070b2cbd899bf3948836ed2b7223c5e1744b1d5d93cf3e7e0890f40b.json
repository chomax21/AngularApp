{"ast":null,"code":"import { HttpClient, HttpParams } from \"@angular/common/http\";\nimport { ToDoItem } from './ToDoItem';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Token } from './tokenItem';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ToDoService {\n  http;\n  constructor(http) {\n    this.http = http;\n  }\n  UserId = \"ID не пришел =(!\";\n  token$ = new Subject();\n  token = new Token(\"\", \"\");\n  setToken(token) {\n    this.token$.next(token);\n  }\n  createToDoItem(item) {\n    return this.http.post(\"https://localhost:7218/api/item\", item);\n  }\n  getUserId(login, password) {\n    return this.http.get('https://localhost:7218/api/user-id?login=' + login + '&password=' + password).subscribe({\n      next: data => {\n        let value = data[\"value\"];\n        this.token.token = value[\"acces_token\"];\n        this.token.id = value[\"id\"];\n        this.setToken(this.token);\n        console.log(this.token.token + '<---токен тут!');\n      },\n      error: error => console.log(error)\n    });\n  }\n  getDoLists(Id) {\n    return this.http.get('https://localhost:7218/api/ready-item?UserId=' + Id).pipe(map(responce => {\n      let itemList = responce[\"value\"];\n      if (itemList) {\n        return itemList.map(function (item) {\n          return new ToDoItem(item.id, item.priority, item.case, item.userid, \"\");\n        });\n      }\n      return [];\n    }));\n  }\n  createrUser(user) {\n    return this.http.post(\"https://localhost:7218/api/user\", user, {\n      params: new HttpParams()\n    });\n  }\n  changeDoList(item) {\n    return this.http.put(\"https://localhost:7218/api/item\", item);\n  }\n  deleteDoListItem(id) {\n    return this.http.delete(\"https://localhost:7218/api/item\", {\n      params: new HttpParams().set(`id`, id)\n    });\n  }\n  static ɵfac = function ToDoService_Factory(t) {\n    return new (t || ToDoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToDoService,\n    factory: ToDoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}